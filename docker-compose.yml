version: '3.8'

services:
  # Main application service
  secret-hitler-ai:
    build:
      context: .
      target: production
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - NODE_ENV=production
    volumes:
      - ./checkpoints:/app/checkpoints
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/ai/training-status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development service
  secret-hitler-ai-dev:
    build:
      context: .
      target: development
    ports:
      - "8001:8000"
    environment:
      - PYTHONPATH=/app
      - NODE_ENV=development
    volumes:
      - .:/app
      - ./checkpoints:/app/checkpoints
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped
    profiles:
      - dev

  # Training service
  secret-hitler-ai-training:
    build:
      context: .
      target: training
    ports:
      - "8002:8000"
      - "8888:8888"  # Jupyter
      - "6006:6006"  # TensorBoard
    environment:
      - PYTHONPATH=/app
      - WANDB_MODE=offline
      - CUDA_VISIBLE_DEVICES=0
    volumes:
      - .:/app
      - ./checkpoints:/app/checkpoints
      - ./logs:/app/logs
      - ./data:/app/data
      - ./models:/app/models
      - ./wandb:/app/wandb
    restart: unless-stopped
    profiles:
      - training
    # Uncomment if you have GPU support
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - cache

  # PostgreSQL for game data (optional)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: secret_hitler_ai
      POSTGRES_USER: ai_user
      POSTGRES_PASSWORD: ai_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    profiles:
      - database

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - secret-hitler-ai
    restart: unless-stopped
    profiles:
      - proxy

volumes:
  redis_data:
  postgres_data:

networks:
  default:
    name: secret-hitler-ai-network
