name: Documentation Build and Deploy

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'backend/**'
      - '.github/workflows/docs.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc graphviz
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r docs/requirements.txt
        pip install -r backend/requirements.txt
    
    - name: Configure Sphinx
      run: |
        cd docs
        sphinx-apidoc -o modules ../backend --force --separate
    
    - name: Build documentation
      run: |
        cd docs
        make html
        
        # Create .nojekyll file to bypass Jekyll processing
        touch _build/html/.nojekyll
        
        # Create CNAME file if custom domain is configured
        if [ ! -z "${{ vars.DOCS_DOMAIN }}" ]; then
          echo "${{ vars.DOCS_DOMAIN }}" > _build/html/CNAME
        fi
    
    - name: Check documentation build
      run: |
        if [ ! -f "docs/_build/html/index.html" ]; then
          echo "Documentation build failed - index.html not found"
          exit 1
        fi
        echo "Documentation built successfully"
        ls -la docs/_build/html/
    
    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v3
      with:
        name: sphinx-docs
        path: docs/_build/html/
        retention-days: 30
    
    - name: Setup Pages
      if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
      uses: actions/configure-pages@v3
    
    - name: Upload to GitHub Pages
      if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
      uses: actions/upload-pages-artifact@v2
      with:
        path: docs/_build/html/

  deploy-docs:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    needs: build-docs
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

  link-check:
    runs-on: ubuntu-latest
    needs: build-docs
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Download documentation artifacts
      uses: actions/download-artifact@v3
      with:
        name: sphinx-docs
        path: docs/_build/html/
    
    - name: Check internal links
      run: |
        # Install link checker
        npm install -g broken-link-checker
        
        # Start a simple HTTP server
        cd docs/_build/html
        python -m http.server 8000 &
        SERVER_PID=$!
        
        # Wait for server to start
        sleep 5
        
        # Check links
        blc http://localhost:8000 --recursive --exclude-external || true
        
        # Stop server
        kill $SERVER_PID

